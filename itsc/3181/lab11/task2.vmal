# Task 2: Maximum
# Your goal for this task is to find the maximum of 3 variables
# Three variables W, X and Y are stored in the main memory
# The location of W is SP-3
# The location of X is SP-2
# The location of Y is SP-1
# The location of Z is SP
# You must set the value of Z to MAX(W, X, Y)

# The value of the SP register will be initialized to some number,
# which denotes the location of Z (W is at SP-3, X is at SP-2,
# Y is at SP-1).

# You may NOT initialize any other registers (though you can use
# any registers you need in your code)

2: 1027; # Initialize the SP register to 1027 (location of Z)
# ALL other non-constant registers will be initialized to 0
# regardless of any initializers you use.

[1024]: -1; # Initialize the value of W to -1
[1025]: 8; # Initialize the value of X to 8
[1026]: 5; # Initialize the value of Y to 5

# Alternative initialization:
# 2: 3; # Initialize the SP register to 3 (location of Z)
#
# [0]: -1; # Initialize the value of W to -1
# [1]: 8; # Initialize the value of X to 8
# [2]: 5; # Initialize the value of Y to 5

# Goal:
#
#   Z = MAX(W,X,Y)
#

# Start your code here

# Start a loop counter at 3
MV A, 6;
ADD A, 6;
ADD A, 6;

# Convert that to -3
NOT A, A;
ADD A, 6;

# B is the address we are currently working with, so copy it from the SP register,
# and add our counter to it.

# We need an initial value to check, so we just read that address from memory and
# put it into register C.
MV B, 2;
ADD B, A;

SA B;
RD;
RB C;


LBL LOOP_START;
# When our counter hits zero, we are done.
SF A;
BIZ LOOP_END;

# Increment our counter.
ADD A, 6;

# Set B to the address we are going to read from.
MV B, 2;
ADD B, A;

SA B;
RD;
RB E;
NOT D, C;
ADD D, 6;
ADD D, E;
SF D;

BIN LOOP_START;
MV C, E;

GO LOOP_START;
LBL LOOP_END;
SA 2;
SB C;
WR;